<style lang='scss'>
.container {
  box-sizing: border-box;
  width: 100%;
  padding: 32rpx;

  .project-info {
    width: 100%;
    height: 400rpx;
    background-color: white;

    .row {
      display: flex;
      flex-flow: row nowrap;

      .project-basic {
        margin-left: 24rpx;

        .name {
          font-size: 30rpx;
          font-weight: bold;
        }

        .desc {
          font-size: 26rpx;
          color: #5b5b5b;
        }
      }
    }
  }

  .statistics {
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: center;
    margin-top: 40rpx;

    .item {
      flex: 1;
      text-align: left;
      font-size: 30rpx;

      .value {
        font-weight: bold;
      }

      .label {
        font-size: 28rpx;
        color: #3b3b3b;
      }
    }
  }
}
</style>
<template>
<view class="container projects-detail">
  <view class="project-info">
    <view class="row">
      <projectAvatar :item.sync="project"></projectAvatar>
      <view class="project-basic">
        <view class="name">
          {{ project.name_with_namespace }} <image wx:if="{{ project.visibility === 'private' }}" class="icon-image icon-image-small" src="/images/lock.png"></image>
        </view>
        <view class="desc">
          {{ project.description }}
        </view>
      </view>
    </view>
    <view class="statistics" wx:if="{{ project && project.statistics }}">
      <view class="item stars">
        <view class="value">{{ project.star_count }}</view>
        <view class="label">{{ lang.stars }}</view>
      </view>
      <view class="item issues">
        <view class="value">{{ project.open_issues_count }}</view>
        <view class="label">{{ lang.issues }}</view>
      </view>
      <view class="item commits">
        <view class="value">{{ project.statistics.commit_count }}</view>
        <view class="label">{{ lang.commits }}</view>
      </view>
    </view>
  </view>
</view>
</template>
<script>
import wepy from 'wepy'
import BasePage from '../pages/base'
import { isEmpty } from '../utils/validate'
import LetterAvatar from '../utils/letter-avatar'
import ProjectAvatar from '../components/projectAvatar'
import ProjectsService from '../services/projects'
export default class ProjectsDetail extends BasePage {
  data = {
    lang: {},
    project: {},
    ...this.def
  }

  components = {
    projectAvatar: ProjectAvatar
  }

  async onLoad(options) {
    await this.userLogin()
    this.setLang()
    this.hasPagination = true
    let serviceFn = ProjectsService.getProjectDetail.bind(ProjectsService)
    let project = await this.loadData(serviceFn, options.pid, null)
    if (!isEmpty(project) && project.name) {
      project.bgColor = LetterAvatar(project.name)
      project.upperFirstLetter = project.name[0].toUpperCase()
    }
    this.project = project
    this.loaded()
  }

  setLang() {
    const t = wepy.i18n.translate
    this.lang.stars = t('proj-detail-stars')
    this.lang.issues = t('proj-detail-issues')
    this.lang.commits = t('proj-detail-commits')
    this.$apply()
  }
}
</script>
