<style lang='scss'>
.container {
  width: 100%;
  box-sizing: border-box;

  .userinfo {
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    justify-content: center;
    margin-top: 40rpx;

    .avatar {
      .avatar-image {
        width: 160rpx;
        height: 160rpx;
        border: 2px solid white;
        border-radius: 50%;
        margin-bottom: 8rpx;
      }
    }

    .nickname {
      font-size: 46rpx;
      margin-bottom: 12rpx;
    }

    .username {
      color: #2e2e2e;
      font-size: 28rpx;
    }
  }

  .operations {
    margin-top: 30rpx;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: center;

    button {
      flex-shrink: 1;
      margin: 0;
    }

    .edit-profile-button {
      margin-right: 32rpx;
    }
  }

  .version {
    width: 100%;
    margin-top: 60rpx;
    text-align: center;
    font-size: 30rpx;
    color: #6b6b6b;
  }
}
</style>
<template>
<loginModal wx:if="{{ !currentUser || !currentUser.id }}"></loginModal>
<view class="container" wx:else>
  <view class="userinfo">
    <view class="avatar" wx:if="{{ currentUser.avatar_url }}">
      <image class="avatar-image" src="{{ currentUser.avatar_url }}"></image>
    </view>
    <view class="nickname">{{ currentUser.name }}</view>
    <view class="username">
      @{{ currentUser.username }} Â· {{ lang.memberSince }}
    </view>
  </view>
  <view class="operations">
    <button plain="true" size="mini" class="edit-profile-button">{{ lang.edit }}</button>
    <button plain="true" size="mini" class="logout-button" @tap.stop="logout">{{ lang.logout }}</button>
  </view>
  <view class="version">v1.0.2</view>
</view>
</template>
<script>
import wepy from 'wepy'
import moment from 'moment'
import BasePage from './base'
import { isEmpty } from '../utils/validate'
import LoginModal from '../components/loginModal'
import { dateFormatWithLang } from '../utils/lang-util'

export default class ProfilePage extends BasePage {
  data = {
    ...this.def
  }

  components = {
    loginModal: LoginModal
  }

  async onShow() {
    await this.userLogin()
    this.setLang()
    this.loaded()
  }

  setLang() {
    const t = wepy.i18n.translate
    if (this.currentUser && this.currentUser.id) {
      this.lang.memberSince = t('me-member-since', {
        date: moment(this.currentUser.created_at).format(dateFormatWithLang(this.locale))
      })
    }
    this.lang.edit = t('me-edit-profile')
    this.lang.logout = t('me-logout')
    this.$apply()
  }

  methods = {
    logout() {
      let page = this
      wx.showActionSheet({
        itemList: [this.lang.logout],
        success(res) {
          if (res.tapIndex === 0) {
            wepy.removeStorageSync('CURRENT_USER')
            wepy.removeStorageSync('GITLAB_PRIVATE_TOKEN')
            page.currentUser = {}
            page.$apply()
          }
        }
      })
    }
  }

  events = {
    'user-logined': async (user) => {
      if (!isEmpty(user)) {
        const t = wepy.i18n.translate
        this.currentUser = user
        this.lang.memberSince = t('me-member-since', {
          date: moment(this.currentUser.created_at).format(dateFormatWithLang(this.locale))
        })
        this.loaded()
      }
    }
  }
}
</script>
